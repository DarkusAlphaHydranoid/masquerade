name: build
on:
  pull_request:
  push:
    branches: [ rolling ]
  workflow_dispatch:
  schedule:
    # Run every morning to detect flakiness and broken dependencies
    - cron: '03 5 * * *'
defaults:
  run:
    shell: bash
jobs:
  build_and_test:
    name: build_and_test_${{ matrix.BUILD_TYPE }}_${{ matrix.ROS_DISTRO }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Rolling (source)
          - ROS_DISTRO: rolling
            BUILD_TYPE: source
          # Jazzy (binary)
          - ROS_DISTRO: jazzy
            BUILD_TYPE: binary
          # Iron (binary)
          - ROS_DISTRO: iron
            BUILD_TYPE: binary
    env:
      ROS2_REPOS_FILE_URL: 'https://raw.githubusercontent.com/ros2/ros2/${{ matrix.ROS_DISTRO }}/ros2.repos'
      RMW_MIDDLEWARE_TEST_PACKAGES: 'test_rclcpp rcl'
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.BUILD_TYPE == 'binary' && format('ros:{0}-ros-base', matrix.ROS_DISTRO) || 'ubuntu:noble' }}
    steps:
    - name: nero forte
      run: |
        rosinstall_generator test_rclcpp --rosdistro ${{ matrix.ROS_DISTRO }} \
          --deps-only --deps --upstream-development > /tmp/deps.repos
        cat /tmp/deps.repos
    - name: baslangic
      if: ${{ matrix.BUILD_TYPE == 'binary' }}
      run: |
        git clone https://github.com/ros2/system_tests.git -b ${{ matrix.ROS_DISTRO }}
        apt update
        rosdep update
        rosdep install --from-paths . -yir
        /ros_entrypoint.sh colcon build --merge-install --packages-select test_rclcpp --install-base /opt/ros/${{ matrix.ROS_DISTRO }} --cmake-args -DBUILD_TESTING=1
        ls /opt/ros/${{ matrix.ROS_DISTRO }}/share
    - uses: ros-tooling/setup-ros@v0.7
      if: ${{ matrix.BUILD_TYPE == 'source' }}
      with:
        use-ros2-testing: true
        required-ros-distributions: ${{ matrix.ROS_DISTRO }}
    - name: Install Coverage Tools
      if: ${{ matrix.BUILD_TYPE == 'binary' }}
      run: sudo apt update && sudo apt install -y python3-colcon-coveragepy-result python3-colcon-lcov-result lcov
    - name: Build and run tests
      id: action-ros-ci
      uses: ros-tooling/action-ros-ci@v0.3
      with:
        package-name: |
          rmw_zenoh_cpp
          zenoh_c_vendor
        target-ros2-distro: ${{ matrix.ROS_DISTRO }}
        vcs-repo-file-url: ${{ matrix.BUILD_TYPE == 'source' && env.ROS2_REPOS_FILE_URL || '' }}
        skip-tests: true
    - name: Run system_tests
      # if: ${{ matrix.BUILD_TYPE == 'source' }}
      run: |
        /ros_entrypoint.sh colcon test --merge-install --packages-select tf2 --install-base /opt/ros/${{ matrix.ROS_DISTRO }} --test-result-base . --base-paths /opt/ros/${{ matrix.ROS_DISTRO }}
        /ros_entrypoint.sh colcon test --merge-install --packages-select test_rclcpp --install-base /opt/ros/${{ matrix.ROS_DISTRO }} --test-result-base . --base-paths /opt/ros/${{ matrix.ROS_DISTRO }}
      # cd ${{ steps.action-ros-ci.outputs.ros-workspace-directory-name }}
      # . install/setup.sh
      # launch_test install/rmw_zenoh_cpp/test/rclcpp_integration.test.py workspace_directory:=`pwd .`
